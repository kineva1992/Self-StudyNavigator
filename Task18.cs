using System;
using System.Collections.Generic;
using System.Text;

namespace Self_StudyNavigator
{
    // Упражнение 1
    //Что неправильно в следующем коде? Исправьте его:
    /*
     class Instantiator<T>
{
    public T instance;
    public Instantiator()
    {
        instance = new T();
    }
}
     */

    class Instantiator<T>
    {
        public T instance;
        public Instantiator()
        {
            instance = default(T);
        }
    }

    /*
     Упражнение 2
    Напишите обобщенный класс, который может хранить в массиве объекты любого типа. 
    Кроме того, данный класс должен иметь методы для добавления данных в массив, удаления из массива, получения элемента из массива 
    по индексу и метод, возвращающий длину массива.
    Для упрощения работы можно пересоздавать массив при каждой операции добавления и удаления
     */

    class Collection<T>
    {
        T[] data;

        //Добавлене данных
        public void Add(T item)
        {
            T[] newData = new T[data.Length + 1];
            for (int i = 0; i < data.Length; i++)
            {
                newData[i] = data[i];
            }

            newData[data.Length] = item;
            data = newData;

        }
        public void Remove(T item)
        {
            //Находим элемент по индексу;
            int index = -1;
            for (int i = 0; i < data.Length; i++)
            {
                if (data[i].Equals(item))
                {
                    index = i;
                    break;
                }
            }

            //Удаляем элемент по индексу
            if (index > -1)
            {
                T[] newData = new T[data.Length - 1];
                for (int i = 0, j = 0; i < data.Length + 1; i++)
                {
                    if (i == index) continue;
                    newData[j] = data[i];
                    j++;
                }
                data = newData;
            }
        }

        //Получаем элемент массива
        public T GetData(int index)
        {
            if (index > -1 && index < data.Length)
            {
                return data[index];
            }
            else throw new IndexOutOfRangeException();
        }
        //Возвращаем длину массива
        public int Count()
        {
            return data.Length;
        }
    }

    /*
     https://metanit.com/sharp/questions/2.19.php

    Вопрос 1
    Что будет выведено на консоль в результате выполнения следующей программы и почему?
    Мы не может присвоить значение ананимным типам, т.к они доступны только для чтения.

    Вопрос 2
    Анонимные типы представляют значимый или ссылочный тип?
    Анонимные типы предсталяютсья как ссылочный тип.

    Вопрос 3
    Скомпилируется ли следующая программа? Если скомпилируется, то что будет выведено на консоль? Если не скомпилируется, то почему?
    Скомпилируться и выведиться на консоль слово Ford, потому что мы ссылаемся в переменной student на student.Name а в нём храниться ссылка на слово Fodr.

     */
     

    
    class Task18
    {
            /*
            Напишите код, в котором:
            Сформируйте и выведите в консоль сообщение о
            сдаче аттестации: «Слушатель <ФИО> сдал
            аттестацию на <N> баллов».
            ФИО слушателя задайте в строковой переменной,
            результат аттестации в переменной типа double.
            Итоговое сообщение сформируйте с помощью
            метода String.Format, аттестационный балл при
            этом округлите до одного знака после запятой.
            */
        public static void ResultBall(string name, double resultBall)
        {
            resultBall = String.Format("{0:f4}",resultBall);
            Console.WriteLine("Слушатель {0} сдал экзамен аттестацию на {1} баллов", name, resultBall);
        }
        /*Напишите код, в котором:
        1. Запросите пользователя ввести текст сообщения
        2. Сформируйте тему сообщения, которая должны
        содержать слово «Тема: » и первые 30 символов
        из текста.
        Учтите, что введенный пользователем текст
        сообщения может быть менее 30 символов
        3. Выведите тему в консоль.*/
        public static void ThemMessage(string them)
        {
            if(them.Length > 30)
            {
                Console.WriteLine(them.Substring(0, 30));
            }
            
            else 
                Console.WriteLine(them.Substring(0, 30));
        }
        /*Напишите код, которые будет удалять лишние
        (двойные, тройные и т.п.) пробелы между словами
        в строке, запрашиваемой у пользователя.
        Результат выводите в консоль. Пример строки:
        «Этот текст содержит лишние пробелы».*/
        public void TrimSpaceWitchText(string textWitchSpace)
        {
           textWitchSpace = Regex.Replace(textWitchSpace, @"\s+", " ");
           Console.WriteLine(textWitchSpace);
        }
        
        //Напишите код, который будет находить и выводить консоль предпоследнее слово в строке
        public void ViewLastElementSting(string inputText)
        {
            string[] text1 = inputText.Split(' ');
            string lastElement = text1[text1.Length - 1];
            Console.WriteLine(lastElement);
        }
    }
    /*
    Контрольные вопросы
    1. Вы запрашиваете у пользователя описание проблемы. Длина описания должна быть не менее 20
    символов. Как это проверить?
    Предположим во входных параметрах в переменную inputText
    1)Получаем Длину строки и проверяем количество символом в строке если оно больше 20, выбрасываем исключение.
    2) в ином случае выполняем необходимое действие.

    2. Чем отличается проверка строки на null от проверки с помощью метода IsNullOrWhiteSpace()?
    null - это пустая строка не хранящая в себе никакого значения
    IsNullOrWhiteSpace() - проверяет стока пуста или хранит или в себе симвом разделения(пробел).
    
    3. Как добавить в выводимое сообщение перенос строки?
    \n - символ перевода коретки.
    
    4. Как проверить, содержит ли строка определённый текст (подстроку)?
      Воспользоваться встроенной функцией - String.Contains();
      
    5. Выводимое пользователю сообщение состоит из неизменяемой части (шаблона) и нескольких
    подставляемых в текст переменных. Например, подставляются дата, номер документа и его автор. С
    помощью какого метода можно сформировать такое сообщение?
    String.Format();
    */
}
